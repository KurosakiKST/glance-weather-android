name: Android CI/CD Pipeline

on:
  push:
    branches:
      - develop   # Trigger the pipeline on push to develop branch
  pull_request:
    branches:
      - develop   # Trigger on pull requests targeting develop branch

jobs:
  build:
    runs-on: ubuntu-latest   # Use the latest Ubuntu environment

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3  # Use the latest stable version (v3)

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'   # Set Java version to 17
          distribution: 'temurin'  # Use Adoptium's Temurin JDK distribution

      # Step 3: Cache Gradle dependencies to speed up builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew assembleRelease --no-daemon  # Build the APK in release mode

      # Optional: Check Java version (for debugging)
      - name: Check Java version
        run: java -version

      # Step 5: Install Firebase CLI
      - name: Install Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash

      # Step 6: Upload APK to Firebase App Distribution
      - name: Upload APK to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/app/outputs/apk/release/app-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "Staging Testers" \
            --token ${{ secrets.FIREBASE_TOKEN }}

        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}   # Firebase App ID
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}     # Firebase authentication token
